DROP TABLE users IF EXISTS;
DROP TABLE authorities IF EXISTS;
DROP TABLE votes IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE dishes IF EXISTS;
DROP TABLE menus IF EXISTS;
DROP TABLE menu_dish IF EXISTS;
DROP SEQUENCE GLOBAL_SEQ IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE authorities
(
    username             VARCHAR(50)            NOT NULL,
    authority            VARCHAR(50)            NOT NULL
);

CREATE TABLE users
(
    username         VARCHAR(50)            NOT NULL,
    password         VARCHAR(255)            NOT NULL,
    enabled          TINYINT                NOT NULL
);

CREATE TABLE votes
(
    id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    date             DATE  DEFAULT CURRENT_DATE    NOT NULL,
    time             TIME DEFAULT CURRENT_TIME NOT NULL,
    rest_id          INTEGER                 NOT NULL,
    username         VARCHAR(50)             NOT NULL
--    FOREIGN KEY (rest_id) REFERENCES restaurants (id) ON DELETE CASCADE
);

--CREATE UNIQUE INDEX votes_idx ON votes (id);

CREATE TABLE menus
(
    id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name             VARCHAR(255)            NOT NULL,
    date             TIMESTAMP               NOT NULL
);

--CREATE UNIQUE INDEX menu_idx ON menus (id);

CREATE TABLE dishes
(
    id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name             VARCHAR(255)            NOT NULL,
    price            INTEGER                 NOT NULL
);

CREATE TABLE restaurants
(
    id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name             VARCHAR(255)            NOT NULL,
    menu_id          INTEGER                 NOT NULL,
    FOREIGN KEY (menu_id) REFERENCES menus (id) ON DELETE CASCADE
);

CREATE TABLE menu_dish
(
    menu_id          INTEGER                 NOT NULL,
    dish_id          INTEGER                 NOT NULL,
    PRIMARY KEY(menu_id, dish_id),
    FOREIGN KEY (menu_id) REFERENCES menus(id) ON DELETE CASCADE,
    FOREIGN KEY (dish_id) REFERENCES dishes(id) ON DELETE CASCADE
);

--CREATE UNIQUE INDEX restaurant_unique_name_idx
  --  ON restaurants (name);


